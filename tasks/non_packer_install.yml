- name: Copying TLS CA certificate
  ansible.builtin.copy:
    src: '{{ vault_tls_ca_cert_file }}'
    dest: '{{ vault_tls_directory }}/ca.crt'
    owner: '{{ vault_user }}'
    group: '{{ vault_group }}'
    mode: '0400'
  when:
    - vault_tls_ca_cert_file is defined
  notify:
    - Restart Vault

- name: Copying TLS certificate and key
  ansible.builtin.copy:
    src: '{{ item.src }}'
    dest: '{{ vault_tls_directory }}/{{ item.dest }}'
    owner: '{{ vault_user }}'
    group: '{{ vault_group }}'
    mode: '0400'
  with_items:
    - { src: '{{ vault_tls_cert_file }}', dest: 'vault.crt' }
    - { src: '{{ vault_tls_key_file }}', dest: 'vault.key' }
  when:
    - vault_tls_cert_file is defined
    - vault_tls_key_file is defined
  notify:
    - Restart Vault

- name: Creating TLS CA cert file
  ansible.builtin.copy:
    dest: '{{ vault_tls_directory }}/ca.crt'
    owner: '{{ vault_user }}'
    group: '{{ vault_group }}'
    mode: '0644'
    content: '{{ vault_tls_ca_cert_string }}'
  when:
    - vault_tls_ca_cert_string is defined

- name: Creating TLS cert file
  ansible.builtin.copy:
    dest: '{{ vault_tls_directory }}/vault.crt'
    owner: '{{ vault_user }}'
    group: '{{ vault_group }}'
    mode: '0644'
    content: '{{ vault_tls_cert_string }}'
  when:
    - vault_tls_cert_string is defined

- name: Creating TLS key file
  ansible.builtin.copy:
    dest: '{{ vault_tls_directory }}/vault.key'
    owner: '{{ vault_user }}'
    group: '{{ vault_group }}'
    mode: '0644'
    content: '{{ vault_tls_key_string }}'
  when:
    - vault_tls_key_string is defined

- name: Copying Vault license file
  ansible.builtin.copy:
    src: '{{ vault_license_file }}'
    dest: '{{ vault_license_directory }}/vault.hclic'
    owner: '{{ vault_user }}'
    group: '{{ vault_group }}'
    mode: '0400'
  when:
    - vault_license_file is defined

- name: Creating Vault license file
  ansible.builtin.copy:
    dest: '{{ vault_license_directory }}/vault.hclic'
    owner: '{{ vault_user }}'
    group: '{{ vault_group }}'
    mode: '0400'
    content: '{{ vault_license_string }}'
  when:
    - vault_license_string is defined

- name: Templating out Vault configuration
  ansible.builtin.template:
    src: vault.hcl.j2
    dest: '{{ vault_config_file }}'
    owner: '{{ vault_user }}'
    group: '{{ vault_group }}'
    mode: '0660'
  notify:
    - Restart Vault

- name: Templating out systemd script
  ansible.builtin.template:
    src: vault.systemd.j2
    dest: /lib/systemd/system/vault.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - Reload Vault daemon
  when:
    - not use_hashicorp_repository

- name: Starting and enabling Vault
  ansible.builtin.systemd:
    name: vault
    enabled: true
    state: started
